@page "/changePassword"
@inject ChangePasswordController changePasswordService


@using System.ComponentModel.DataAnnotations;

<h3>ChangePassword</h3>
<EditForm Model="changePasswordL">
    <DataAnnotationsValidator />

    <div style="margin-top:20px">
        <label for="Name">Current Password</label>
        <div>
            <DxTextBox @bind-Text="@changePasswordL.CurrentPassword" Password="true" />
        </div>
    </div>
    <div style="margin-top:20px">
        <label for="Name">New Password</label>
        <div>
            <DxTextBox @bind-Text="@changePasswordL.NewPassword" Password="true" />
        </div>
    </div>
    <div style="margin-top:20px">
        <label for="Name">Confirm Password</label>
        <div>
            <DxTextBox @bind-Text="@changePasswordL.confirmNewPassword" Password="true" />
        </div>
    </div>
    <ValidationSummary />

    <div style="margin-top:10px;text-align:right">
        <button type="submit" class="btn btn-success" @onclick="(async ()=> await changePassword())">Save</button>

    </div>
</EditForm>
@code {
    public ChangePasswordModel changePasswordL = new ChangePasswordModel();
    public string userName = "";
    [CascadingParameter] private Task<AuthenticationState> authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;
            userName = user.Identity.Name;

            if (user?.Identity is not null && user.Identity.IsAuthenticated)
            {

            }
            else
            {
                URLHelper.NavigateTo("/");
            }
        }
    }


    protected async Task changePassword()
    {
        //var resultGetData = await userAccountService.GetUser(userName, changePasswordL.CurrentPassword);
        //if (resultGetData.Success == false)
        //{
        //    if (resultGetData.Data == null)
        //    {
        //        await Swal.FireAsync(
        //          "Update ChangePassword",
        //          resultGetData.Message,
        //          SweetAlertIcon.Error
        //          );
        //    }


        //    var checkpass = await changePasswordService.Update(userName, changePasswordL.NewPassword);
        //    if (checkpass.Success == true)
        //    {
        //        URLHelper.NavigateTo("/");
        //    }
        //    else
        //    {
        //        await Swal.FireAsync(
        //          "Update ChangePassword",
        //          checkpass.Message,
        //          SweetAlertIcon.Error
        //          );
        //    }
        //}
        //else
        //{
        //    await Swal.FireAsync(
        //      "Update ChangePassword",
        //      resultGetData.Message,
        //      SweetAlertIcon.Error
        //      );
        //}
        var resultGetData = await userAccountService.GetUser(userName, changePasswordL.CurrentPassword);
        if (resultGetData.Success)
        {
            var checkpass = await changePasswordService.Update(userName, changePasswordL.NewPassword);
            if (checkpass.Success == true)
            {
                await Swal.FireAsync(
                  "Update ChangePassword Successfully",
                  checkpass.Message,
                  SweetAlertIcon.Success
                  );
                URLHelper.NavigateTo("/");
            }
            else
            {
                await Swal.FireAsync(
                  "Update ChangePassword",
                  checkpass.Message,
                  SweetAlertIcon.Error
                  );
            }

        }
        else
        {
            await Swal.FireAsync(
              "Update ChangePassword",
              resultGetData.Message,
              SweetAlertIcon.Error
              );
        }
    }
}

